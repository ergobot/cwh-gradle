/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ergobot' at '3/9/16 5:29 PM' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 * http://www.hascode.com/2015/07/integrating-swagger-into-a-spring-boot-restful-webservice-with-springfox/
 */

buildscript {
    repositories {
    jcenter()
    maven {
        url 'http://4thline.org/m2'
    }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.4.RELEASE")
    }
}


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'application'

jar {
    baseName = 'dateconv-rest-service'
    version =  '1.0.0'
}
 

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven {
        url 'http://4thline.org/m2'
    }
    mavenCentral()
    
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare the dependencies for your production and test code
dependencies {
    
    compile fileTree(dir: 'libs', include: ['*.jar'])
    
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("io.springfox:springfox-swagger2:2.0.2")
    compile("io.springfox:springfox-swagger-ui:2.0.2")
    
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile 'se.sawano.java:alphanumeric-comparator:1.4.1'
	compile 'org.fourthline.cling:cling-core:2.0.1'
	compile 'org.fourthline.cling:cling-support:2.0.1'
	compile 'org.apache.httpcomponents:httpclient:4.3.3'
	compile 'org.apache.httpcomponents:httpcore:4.3.2'
	
	compile 'commons-cli:commons-cli:1.2'
	compile 'commons-codec:commons-codec:1.5'
	compile 'commons-io:commons-io:2.4'
	compile 'commons-logging:commons-logging:1.2'
	compile 'org.freemarker:freemarker:2.3.23'
	compile 'com.google.guava:guava:19.0'
	compile 'org.eclipse.jetty.aggregate:jetty-all:9.3.7.v20160115'
	compile 'javax.annotation:javax.annotation-api:1.2'
	compile 'javax.websocket:javax.websocket-api:1.1'
	compile 'javax.servlet:javax.servlet-api:3.1.0'
	compile 'com.jcraft:jsch:0.1.53'
	compile 'org.scream3r:jssc:2.8.0'
	compile 'org.apache.logging.log4j:log4j-api:2.5'
	compile 'org.apache.logging.log4j:log4j-core:2.5'
	
	compile 'com.googlecode.mp4parser:isoparser:1.1.7'
	
	compile 'org.apache.james:apache-mime4j:0.6.1'
	compile 'org.apache.httpcomponents:httpcore:4.2.5'
	compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.1'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.4.1'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.4.1'
	compile 'org.codehaus.jackson:jackson-jaxrs:1.9.12'
	compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:2.4.1'
	compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.4.1'
	compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.12'
	compile 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.4.1'
	compile 'org.codehaus.jackson:jackson-xc:1.9.12'
	compile 'javax.xml.bind:jaxb-api:2.2.7'
	compile 'org.jboss.resteasy:jaxrs-api:3.0.9.Final'
	compile 'org.jboss.resteasy:resteasy-jackson2-provider:3.0.9.Final'
	compile 'org.jboss.resteasy:resteasy-jaxrs:3.0.9.Final'
	compile 'org.jboss.resteasy:resteasy-multipart-provider:3.0.9.Final'
	
	compile 'org.rxtx:rxtx:2.1.7'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
mainClassName = "org.area515.resinprinter.server2.Application"
/*task execute(type:JavaExec) {
 *  main = org.area515.resinprinter.server2.Application
 *  classpath = sourceSets.main.runtimeClasspath
*}
*/


